{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to pygis","text":"<p>A Python package for installing commonly used packages for GIS programming.</p> <ul> <li>Free software: MIT license</li> <li>Documentation: https://pygis.gishub.org</li> </ul> <p></p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v061-jul-8-2022","title":"v0.6.1 - JUl 8, 2022","text":"<ul> <li>Added kaleido, pydeck, and keplergl</li> </ul>"},{"location":"changelog/#v060-jun-19-2022","title":"v0.6.0 - Jun 19, 2022","text":"<ul> <li>Added geemap extra packages</li> </ul>"},{"location":"changelog/#v050-nov-29-2022","title":"v0.5.0 - Nov 29, 2022","text":"<ul> <li>Updated geemap and leafmap versions</li> </ul>"},{"location":"changelog/#v040-jul-26-2022","title":"v0.4.0 - Jul 26, 2022","text":"<ul> <li>Pin ipython and ipykernel versions to reduce installation time on Colab.</li> </ul>"},{"location":"changelog/#v030-jun-18-2022","title":"v0.3.0 - Jun 18, 2022","text":"<ul> <li>Added geedim</li> <li>Reorder package list</li> </ul>"},{"location":"changelog/#v020-jun-6-2022","title":"v0.2.0 - Jun 6, 2022","text":"<ul> <li>Added dependencies</li> <li>Updated mkdocs</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/opengeos/pygis/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>pygis could always use more documentation, whether as part of the official pygis docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/opengeos/pygis/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up pygis for local development.</p> <ol> <li> <p>Fork the pygis repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/pygis.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv pygis\n$ cd pygis/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 pygis tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.5, 3.6, 3.7 and 3.8, and     for PyPy. Check https://github.com/opengeos/pygis/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"installation/","title":"Installation","text":"<p>The pygis package has many dependencies, such as GeoPandas, rasterio, and localtileserver. These optional dependencies can sometimes be a challenge to install, especially on Windows. Therefore, we advise you to closely follow the recommendations below to avoid installation problems.</p>"},{"location":"installation/#video-tutorial","title":"Video Tutorial","text":""},{"location":"installation/#installing-with-uv","title":"Installing with uv","text":"<p>uv us an extremely fast Python package and project manager, written in Rust. It is designed to be a drop-in replacement for pip. You can install <code>pygis</code> using <code>uv</code> as follows:</p> <pre><code>uv pip install pygis\nuv pip install gdal pyproj --find-links https://girder.github.io/large_image_wheels\n</code></pre>"},{"location":"installation/#installing-with-anacondaminiconda","title":"Installing with Anaconda/Miniconda","text":"<p>To install pygis and all its dependencies, we recommend you use the conda package manager. This can be obtained by installing the Anaconda Distribution (a free Python distribution for data science), or through Miniconda (minimal distribution only containing Python and the conda package manager). See also the installation docs for more information on how to install Anaconda or Miniconda locally.</p>"},{"location":"installation/#using-the-conda-forge-channel","title":"Using the conda-forge channel","text":"<p>pygis is available on the conda-forge channel, a community effort that provides conda packages for a wide range of software.</p> <pre><code>conda install -c conda-forge pygis\n</code></pre>"},{"location":"installation/#creating-a-new-conda-environment","title":"Creating a new conda environment","text":"<p>Creating a new environment is not strictly necessary, but given that some pygis dependencies might have a version conflict with other geospatial packages in an existing conda environment, it is a good practice to install pygis and its dependencies in a clean environment starting fresh.</p> <p>The following commands create a new conda environment with the name <code>geo</code> and install pygis and its dependencies (e.g., GeoPandas, localtileserver) in it:</p> <pre><code>conda create -n geo python=3.12\nconda activate geo\nconda install pygis -c conda-forge\n</code></pre> <p>Important note: If you are using Windows, we advise you to closely follow the installation instructions above to install GeoPandas from the default conda channel (<code>conda install geopandas</code>) rather than from the conda-forge channel. This can avoid a potential <code>spatialindex_c-64.dll</code> error when using GeoPandas (source). If you are using Linux or macOS, it is okay to install all pygis dependencies from the conda-forge channel with the following command:</p> <pre><code>conda install -c conda-forge pygis\n</code></pre>"},{"location":"installation/#using-mamba","title":"Using Mamba","text":"<p>When installing packages using the conda package manager, sometimes it can take a while for conda to resolve dependencies. If it takes too long or fails to resolve dependencies, you can try using the Mamba package manager to install pygis and its dependencies. Mamba is a fast, robust, and cross-platform package manager. It runs on Windows, macOS, and Linux, and is fully compatible with conda packages and supports most of conda\u2019s commands. Once Mamba is installed in a conda environment, you can then simply replace any <code>conda</code> command with <code>mamba</code>. For example, to install pygis and its dependencies with Mamba, you can use the following commands:</p> <pre><code>conda create -n geo python=3.12\nconda activate geo\nconda install -c conda-forge mamba\nmamba install -c conda-forge gdal\nmamba install -c conda-forge pygis\n</code></pre>"},{"location":"installation/#installing-with-pip","title":"Installing with pip","text":"<p>pygis is also available on PyPI. It can be installed with pip using the following command:</p> <pre><code>pip install --find-links=https://girder.github.io/large_image_wheels --no-cache GDAL\npip install pygis\n</code></pre> <p>All optional dependencies of pygis are listed in requirements_dev.txt.</p>"},{"location":"installation/#installing-from-source","title":"Installing from source","text":"<p>You may install the latest development version by cloning the GitHub repository with Git and using pip to install from the local directory:</p> <pre><code>git clone https://github.com/opengeos/pygis.git\ncd pygis\npip install .\n</code></pre> <p>It is also possible to install the latest development version directly from the GitHub repository with:</p> <pre><code>pip install git+https://github.com/opengeos/pygis.git\n</code></pre>"},{"location":"installation/#upgrading-pygis","title":"Upgrading pygis","text":"<p>If you have installed pygis before and want to upgrade to the latest version, you can run the following command in your terminal:</p> <pre><code>pip install -U pygis\n</code></pre> <p>If you use conda, you can update pygis to the latest version by running the following command in your terminal:</p> <pre><code>conda update -c conda-forge pygis\n</code></pre>"},{"location":"pygis/","title":"pygis module","text":"<p>Main module.</p>"},{"location":"usage/","title":"Usage","text":"<p>Currently, the <code>pygis</code> package only helps you install optional dependencies for geemap and leafmap with only one command, making it easier to set up a conda environment for geospatial analysis and avoid dependency conflicts during installation. The <code>pygis</code> package itself does not have any meaningful functions yet. After installation, you can continue to the commonly used geospatial packages as usual. For example:</p> <pre><code>import leafmap\nm = leafmap.Map()\nm\n</code></pre>"}]}